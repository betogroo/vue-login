{
  // VUE BASE
  "Vue3 Script Setup Complet": {
    "scope": "vue, html",
    "prefix": "v3-sfc-complete",
    "body": [
      "<script setup lang=\"ts\">$1",
      "</script>",
      "",
      "<template>",
      "\t<div></div>",
      "</template>"
    ]
  },
  "Vue 3 Options Api TS": {
    "scope": "vue, html",
    "prefix": "v3-options-api-ts",
    "body": [
      "<script lang=\"ts\">",
      "import { defineComponent } from 'vue'",

      "export default defineComponent({",
      "\tdata() {",
      "\t\treturn {}",
      "\t}",
      "})",
      "</script>"
    ]
  },
  "Vue 3 Composition Api": {
    "scope": "vue, html",
    "prefix": "v3-composition-api-ts",
    "body": [
      "<script lang=\"ts\">",
      "import { defineComponent } from 'vue'",
      "export default defineComponent({",
      "\tsetup() {",
      "\t\treturn {$1}",
      "\t}",
      "})",
      "</script>"
    ]
  },
  "Vue3 Script Setup": {
    "scope": "vue, html",
    "prefix": "v3-sfc",
    "body": ["<script setup lang=\"ts\">", "$1", "</script>"]
  },
  "Vue3 Template": {
    "scope": "vue, html",
    "prefix": "v3-template",
    "body": ["<template>", "\t<div></div>", "</template>"]
  },
  "SCSS Scoped": {
    "scope": "vue, html",
    "prefix": "v3-scss-scoped",
    "body": ["<style lang=\"scss\" scoped></style>"]
  },
  "Vue 3 Form Submit Prevent": {
    "scope": "vue, html",
    "prefix": "v3-form-submit-prevent",
    "body": ["<form @submit.prevent=\"handleSubmit\">", "\t$1", "</form>"]
  },
  "Vue DIV v-if": {
    "scope": "vue, html",
    "prefix": "v3-div-v-if",
    "body": ["<div v-if=\"$1\">$2</ div>"]
  },
  "Vue DIV v-else": {
    "scope": "vue, html",
    "prefix": "v3-div-v-else",
    "body": ["<div v-else>$1</ div>"]
  },

  // VUE 3 JS / TS
  "Vue 3 Define Props with Defaults": {
    "scope": "javascript,typescript",
    "prefix": "v3-sfc-props-defaults",
    "body": [
      "interface Props {",
      "${1:prop}: ${2:type}",
      "}",
      "const props = withDefaults(defineProps<Props>(), {",
      "${1:prop}: ${3:value}",
      "})",
      ""
    ]
  },
  "Vue Computed": {
    "scope": "javascript,typescript",
    "prefix": "v3-computed",
    "body": ["const ${1:name} = computed(() => {", "\treturn", "})"]
  },
  "Vue 3 Define Props": {
    "scope": "javascript,typescript",
    "prefix": "v3-sfc-props",
    "body": [
      "interface Props {",
      "${1:prop}: ${2:type}",
      "}",
      "const props = defineProps<Props>()",
      ""
    ]
  },
  "Vue 3 Base Route": {
    "scope": "javascript,typescript",
    "prefix": "v3-base-route",
    "body": [
      "{",
      "\tpath: '$1',",
      "\tname: '$2',",
      "\tcomponent: $3,",
      "\tmeta: {",
      "\t\trequiresAuth: $4,",
      "\t\ttitle: '$2'",
      "\t}",
      "}"
    ]
  },
  "Vue 3 Pinia Store": {
    "scope": "javascript,typescript",
    "prefix": "v3-pinia-store",
    "body": [
      "export const useStore = defineStore('${1:id}', {",
      "\tstate: () => ({}),",
      "\tgetters: {},",
      "\tactions: {}",
      "})"
    ]
  },
  "Vue 3 Composable Base": {
    "scope": "javascript,typescript",
    "prefix": "v3-composable",
    "body": [
      "const $1 = () => {",
      "\treturn {  }",
      "}",
      "",
      "export default $1"
    ]
  },
  "Vue 3 Composable with basic refs ": {
    "scope": "javascript,typescript",
    "prefix": "v3-composable-refs",
    "body": [
      "import { ref } from 'vue'\n",
      "const $1 = () => {",
      "\tconst isPending = ref(false)",
      "\tconst error = ref(null)",
      "\treturn { isPending, error  }",
      "}",
      "",
      "export default $1"
    ]
  },
  "HANDLE CLICK": {
    "scope": "javascript,typescript",
    "prefix": "v3-handle-click",
    "body": [
      "const ${1:handleClick} = () => {",
      "${2:console.log(data.value)}",
      "}"
    ]
  },
  "HANDLE CLICK ASYNC": {
    "scope": "javascript,typescript",
    "prefix": "v3-handle-click-async",
    "body": ["const ${1:handleClick} = async () => {", "$await ", "}"]
  },
  "HANDLE SUBMIT": {
    "scope": "javascript,typescript",
    "prefix": "v3-handle-submit",
    "body": ["const handleSubmit = () => {", "console.log(data.value)", "}"]
  },
  "Vue 3 Watch": {
    "scope": "javascript,typescript",
    "prefix": "v3-watch",
    "body": ["watch(() => foo, (newValue, oldValue) => {", "\t$1", "})"]
  },
  "Vue 3 On Before Mount": {
    "scope": "javascript,typescript",
    "prefix": "v3-onBeforeMount",
    "body": ["onBeforeMount(() => {})"]
  },
  // VUETIFY TEMPLATE AND COMPONENTES
  "Vuetify Centered Container": {
    "scope": "vue, html",
    "prefix": "vtf-center-layout",
    "body": [
      "<v-container class=\"fill-height\">",
      "\t<v-responsive class=\"text-center\">",
      "\t\t$1",
      "\t</v-responsive>",
      "</v-container>"
    ]
  },
  //TS / JS BASICS
  "Try/Catch/Finaly": {
    "scope": "javascript, typescript",
    "prefix": "v3-try-catch-finaly",
    "body": [
      "try {",
      "\terror.value = null",
      "\tisPending.value = true",
      "\n",
      "} catch (err) {",
      "\tconst e = err as Error",
      "\terror.value = e.message",
      "\tconsole.log(e)",
      "} finally {",
      "\tisPending.value = false",
      "}"
    ]
  }
}
